<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Haihao Sun&#39;s Homepage</title>
    <link>http://localhost:1313/post/</link>
      <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Mon, 25 Nov 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu68170e94a17a2a43d6dcb45cf0e8e589_3079_512x512_fill_lanczos_center_3.png</url>
      <title>Blog</title>
      <link>http://localhost:1313/post/</link>
    </image>
    
    <item>
      <title>Trip in Shanghai</title>
      <link>http://localhost:1313/post/2024-11-25-shanghai-trip/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-11-25-shanghai-trip/</guid>
      <description>&lt;h1 id=&#34;day1---到达-arrival&#34;&gt;Day1 - 到达 Arrival&lt;/h1&gt;
&lt;p&gt;我于周六晚上抵达上海浦东国际机场（PVG），并在上海唐镇智选假日酒店度过了在上海的第一个晚上。&lt;/p&gt;
&lt;p&gt;电信（中国一家受欢迎的手机提供商）出于保护我的隐私的目的，以某种方式暂停了手机套餐，因为距离我上次在中国使用手机已经快两年了。由于我无法访问互联网，因此无法使用 Uber、Lyft 或任何其他乘车共享应用程序，因此我必须在机场使用现金和传统出租车服务才能到达酒店。&lt;/p&gt;
&lt;p&gt;在出租车上，司机故意和我闲聊，绕道走，以便能从我这样的游客身上赚到更多的钱，这让我有一种被骗的感觉。根据该应用程序，预计出租车费约为 80 元，但最终行程为 140 元。当我告诉她我记录了她的服务号码以便将来客户投诉时，她同意给我折扣并向我索要 100 元。我付了她 100 元，带着不愉快的心情下了出租车。&lt;/p&gt;
&lt;p&gt;由于长途飞行和不好的出租车服务体验，我感到非常疲惫。此外，由于电话套餐暂停而无法上网，这让我陷入了尴尬的境地，我无法订购 Uber Eats，也无法付款，因为无法使用支付宝或微信支付。&lt;/p&gt;
&lt;p&gt;又饿又累，我最后打电话给我高中和大学的朋友天成点餐。同时，我也让父母给电信打电话，恢复我的手机套餐，这样我就可以上网了。&lt;/p&gt;
&lt;p&gt;感谢我的朋友和我的父母，吃了老乡鸡的食物和恢复电话套餐后，我感觉自己获得了重生。那天晚上我睡得很好，只是因为时差而早醒。&lt;/p&gt;
&lt;p&gt;I arrived at Shanghai Pudong International Airport(PVG) on Saturday evening, and I spent my first night in Shanghai at Holiday Inn Express Shanghai Tangzhen.&lt;/p&gt;
&lt;p&gt;Dianxin(a popular phone provider in China) somehow suspended the phone plans for protecting my privacy due to the fact that it&amp;rsquo;s been almost two years since the last time that I used my phone in China. As I do not have access to the Internet, I cannot use Uber, Lyft or any other ride sharing apps, therefore I have to use cash and conventional taxi service at the airport to arrive my hotel.&lt;/p&gt;
&lt;p&gt;During the taxi ride, the driver deliberately made small talks with me and took detours such that she could possibly earn more money from a visitor like me, which makes me feel scamed. While the estimated taxi fees, according to the app, is around 80rmb, the trip ended up being 140 rmb. As I told her that I recorded her service number for future customer complains, she agreed to give me a discount and asked 100 rmb from me. I paied her 100rmb and left the taxi with unfavorable feelings.&lt;/p&gt;
&lt;p&gt;I feel extremely tired due to the long flight and unfavorable experience of taxi service. Additionally, not having access to Internet due to the suspended phone plan put me into an akward situation where I cannot order uber eats and cannot pay money becuase of not being able to use AliPay or Wechat Pay.&lt;/p&gt;
&lt;p&gt;Starving and Tired, I ended up calling my high school and college friend Tiancheng for ordering food. Meanwhile, I also asked my parents to call Dianxin for resuming my phone plan such that I can have access to Internet and everything.&lt;/p&gt;
&lt;p&gt;Thanks to my friend and my parents, I felt that I got reborn after the food from Hometown Chicken and resuming my phone plan. I had a farily good sleep that night, except waked up early due to jet lag.&lt;/p&gt;
&lt;h1 id=&#34;day2---与高中和大学朋友重聚-reunion-with-high-school-and-college-friend&#34;&gt;Day2 - 与高中和大学朋友重聚 Reunion with high school and college friend&lt;/h1&gt;
&lt;p&gt;8:00 左右起床，与潜在的新经理会面了大约 20 分钟，讨论了一些内部调动的潜在计划；我对嵌入技术感到非常兴奋，唯一剩下的就是与我的经理讨论转组事宜。&lt;/p&gt;
&lt;p&gt;天成于 10：00 到达酒店，我们一起在智选假日酒店吃早餐。早餐后，我参观了他的公寓，并在附近的理发店理发。午餐吃完韩国菜后，我们去上海滨江森林公园散步。公园很大，种满了植物，还有野餐的地方。我们逛了一会儿，在一池咖啡店喝了杯咖啡或茶。&lt;/p&gt;
&lt;p&gt;晚上我们从浦东去了静安，周二我要去那里面试签证。我们在一家港式咖啡厅吃饭，菜的味道非常好，湾区没有一家餐厅能与之媲美。饭后，我们在上海静安散步。我们之前一起去过上海两次，一次是 2020 年夏天，庆祝学期季度结束，另一次是 2021 年夏天，在我们离开中国去美国读研究生之前。上海和我们上次去的时候一样，甚至繁华，只是我觉得自己老了，消化食物的能力变差了，精力也变少了。这种感觉让我陷入了一种情绪状态。&lt;/p&gt;
&lt;p&gt;城市漫步结束后，我们回到城市酒店，我和他告别，他开车回去了，因为周一是他的工作日。那天晚上 9 点左右我感到非常困，晚上 9 点半左右就睡着了，大概睡觉是我情绪低落时能做的最好的事情吧。&lt;/p&gt;
&lt;p&gt;Waked up at around 8:00, I met with my potential new manager for around 20 minutes, discussing some potential plans for internal transfer; I am super excited about the embedding technology, the only thing remaining is to talk with my manager about the transfer.&lt;/p&gt;
&lt;p&gt;Tiancheng arrived at the hotel at 10:00, we had breakfast together at Holiday Inn Express. After the breakfast, I visited his apartment and got a haircut at a barber nearby. After the korean food for lunch, we went to Shanghai Binjiang Forest Park for a walk. The park was quite big, full with plants and picnickers. We walked around for a while, had a cup of coffee or tea at the Yichi Coffee.&lt;/p&gt;
&lt;p&gt;At night we went from Pudong district to Jing&amp;rsquo;an district where I would do visa interview on Tuesday. We had dinner at a Hong Kong-style cafe, the dishes taste so good that there is no restaurants comparable to this one in the bay area. After the dinner, we did some city walk in Jing&amp;rsquo;an, Shanghai. We&amp;rsquo;ve been to Shanghai together twice before, once in 2020 summer, celebrating the quarter ending, another time in 2021 summer, before we left China to America for starting grad school. Shanghai is the same or even more bustling than last time we went there, it&amp;rsquo;s just I feel I am getting older, with less ability to digest food and less energy. This kinda of feelings put me into an emotional state.&lt;/p&gt;
&lt;p&gt;After the citywalk, we went back to City Hotel, I said farewell to him, and he drove back as Monday is a work day for him. I felt extremely sleepy around 9:00 and felt in asleep around 9:30PM that night, probably feeeling asleep is the best thing I can do when feeling emotional.&lt;/p&gt;
&lt;h1 id=&#34;day3&#34;&gt;Day3&lt;/h1&gt;
&lt;p&gt;Waked up at 1:30AM, and then Slept from 5:00AM to 7:00AM, I waked up again, feeling lucid.&lt;/p&gt;
&lt;p&gt;Had an egg crepe in the morning, then went to the Shanghai World Financial Center where Google&amp;rsquo;s office located. Then I spent some time in the office, hopping between 60F and 64F, had lunch at Hai Cafe at 62F. Stayed there until 6:00PM for the night view.&lt;/p&gt;
&lt;p&gt;Met my parents at 6:30PM at City Hotel.&lt;/p&gt;
&lt;h1 id=&#34;day-4&#34;&gt;Day 4&lt;/h1&gt;
&lt;p&gt;Met with my manager, Met with the new manager, Went to Visa Appointment.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Poker Strategy</title>
      <link>http://localhost:1313/post/2024-11-04-poker/</link>
      <pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-11-04-poker/</guid>
      <description>&lt;h1 id=&#34;mdf-and-bf&#34;&gt;MDF and BF&lt;/h1&gt;
&lt;h2 id=&#34;mdf&#34;&gt;MDF&lt;/h2&gt;
&lt;p&gt;If the pot is \(1\) and your opponent&amp;rsquo;s bet is \(b\):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you fold: \(1 \times (1 - p(\text{you-call}))\)&lt;/li&gt;
&lt;li&gt;you call: \(-b \times p(\text{you-call})\)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Adding both cases:&lt;/p&gt;
\[
1 \times (1 - p(\text{you-call})) + p(\text{you-call}) \times -b = 0
\]
&lt;p&gt;Simplifying:&lt;/p&gt;
\[
1 = (1 + b) \times p(\text{you-call})
\]
&lt;p&gt;Solving for \(p(\text{you-call})\):&lt;/p&gt;
\[
p(\text{you-call}) = \frac{1}{1 + b}
\]
&lt;h2 id=&#34;bluffing-frequency&#34;&gt;Bluffing Frequency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;0.75 pot
&lt;ul&gt;
&lt;li&gt;flop 67%&lt;/li&gt;
&lt;li&gt;turn 50%&lt;/li&gt;
&lt;li&gt;river 33%&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;how-to-bet&#34;&gt;How to bet&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;If you have nuts advantage, bet bigger.&lt;/li&gt;
&lt;li&gt;If you do not have nuts advantage, bet smaller.&lt;/li&gt;
&lt;li&gt;Nuts advantage: when you have more combinations of super strong hands (two-pair or better) than his opponent&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Find Value Cards&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The inequality \( \text{Equity} &gt; 1 - \frac{1}{2(1+b)} \) suggests a threshold where a player’s equity (their share of the pot if the hand goes to showdown) should exceed a certain value in order for them to make a profitable move, such as calling or betting.&lt;/p&gt;
&lt;p&gt;To understand this better, we can break it down:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Setting Up the Inequality&lt;/strong&gt;: The right side, \(1 - \frac{1}{2(1+b)}\), provides a boundary value. This boundary depends on the size of the bet \(b\) relative to the pot (normalized to 1).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Interpretation of the Threshold&lt;/strong&gt;: If a player’s equity in the hand is greater than \(1 - \frac{1}{2(1+b)}\), then their hand is likely profitable enough to proceed with aggressive action, such as betting or calling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Breakdown of the Expression&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For larger bets \(b\), \( \frac{1}{2(1+b)} \) becomes smaller, and therefore \(1 - \frac{1}{2(1+b)}\) approaches 1. This implies that when the bet is large, the player needs a higher equity to continue.&lt;/li&gt;
&lt;li&gt;For smaller bets \(b\), \( \frac{1}{2(1+b)} \) is larger, meaning that \(1 - \frac{1}{2(1+b)}\) is lower. In this case, a player can proceed with lower equity since the risk is relatively lower.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Value bet&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;If I check, the remaining streets &amp;lt; biggest that I can get, I 100% bet&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;What to bluff&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Backdoor Draw&lt;/li&gt;
&lt;li&gt;Frontdoor Draw&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;exploitation&#34;&gt;exploitation&lt;/h2&gt;
&lt;h3 id=&#34;call&#34;&gt;Call&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If opponent bluff too much, call, otherwise not (BF to check)&lt;/li&gt;
&lt;li&gt;Only call one street.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bluff&#34;&gt;Bluff&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If your opponent is calling too much, do not bluff, otherwise, bluff (MDF to check)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DDIA Chapter 7 - Transaction</title>
      <link>http://localhost:1313/post/2024-10-06-ddia-chapter-7-transaction/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-10-06-ddia-chapter-7-transaction/</guid>
      <description>&lt;h1 id=&#34;acid&#34;&gt;ACID&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Atomicity: All or nothing.&lt;/li&gt;
&lt;li&gt;Consistency: Invariants must always be true (This is from application perspective).&lt;/li&gt;
&lt;li&gt;Isolation: Transactions are executed in a way that their operations do not interfere with each other.&lt;/li&gt;
&lt;li&gt;Durability: Once commited, data will not be forgetten.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;weak-isolation-levels&#34;&gt;Weak Isolation Levels&lt;/h1&gt;
&lt;h2 id=&#34;read-committed-to-combat-dirty-read&#34;&gt;Read Committed (To combat dirty read)&lt;/h2&gt;
&lt;h3 id=&#34;what-is-dirty-read&#34;&gt;What is dirty read?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Read a data that has not been committed by a transaction.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;implement-read-committed&#34;&gt;Implement Read Committed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Lock on write.&lt;/li&gt;
&lt;li&gt;Lock on read (performance hit).&lt;/li&gt;
&lt;li&gt;Remember old + new value.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;snapshot-isolation-and-repeatable-read-to-combat-nonrepeatable-read&#34;&gt;Snapshot Isolation and Repeatable Read (To combat nonrepeatable read)&lt;/h2&gt;
&lt;h3 id=&#34;what-is-nonrepetabale-read&#34;&gt;What is nonrepetabale read?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Alice read account A (50).&lt;/li&gt;
&lt;li&gt;Alice executes A = A + 10.&lt;/li&gt;
&lt;li&gt;Alice executes B = B - 10.&lt;/li&gt;
&lt;li&gt;Alice read account B (40).&lt;/li&gt;
&lt;li&gt;Sum is 50 + 40 which is not 100.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;snapshot-isoltion&#34;&gt;Snapshot Isoltion&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Each transaction sees the snapshot of the database at the start of the transaction.&lt;/li&gt;
&lt;li&gt;MVCC(Multi-version concurrency control).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;preventing-lost-updates&#34;&gt;Preventing Lost Updates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Atomic write operations.&lt;/li&gt;
&lt;li&gt;Explicit locking.&lt;/li&gt;
&lt;li&gt;Automotically deleting lost updates.&lt;/li&gt;
&lt;li&gt;Compare and set.&lt;/li&gt;
&lt;li&gt;Conflict resolution and replica.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;serializability-to-combat-phantom&#34;&gt;Serializability (To combat phantom)&lt;/h1&gt;
&lt;h2 id=&#34;write-skew-and-phantoms&#34;&gt;Write Skew and Phantoms&lt;/h2&gt;
&lt;p&gt;oncall-rotation in emergency room.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;select&lt;/li&gt;
&lt;li&gt;decide how to continue based on select&lt;/li&gt;
&lt;li&gt;INSERT, UPDATE, DELTE&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;actual-serial-execution&#34;&gt;Actual Serial Execution&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Every transaction must be small and fast for performance.&lt;/li&gt;
&lt;li&gt;It is limited to use cases where the active dataset can fit in memory for performance.&lt;/li&gt;
&lt;li&gt;Write throughput must be low enough to be handled on a single CPU core, or else transactions need to be partitioned without requiring cross-partition coordination.&lt;/li&gt;
&lt;li&gt;Cross-partition transactions are possible, but there is a hard limit to the extent to which they can be used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;two-phase-locking&#34;&gt;Two-Phase Locking&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;read: acquire the lock in shared mode, if exclusive exists, wait.&lt;/li&gt;
&lt;li&gt;write: acquire the lock in exclusive mode.&lt;/li&gt;
&lt;li&gt;read then write: acquire in shared first, then exclusive.&lt;/li&gt;
&lt;li&gt;commit or abort: hold until abort or commit&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;serializable-snapshot-isolation-ssi&#34;&gt;Serializable Snapshot Isolation (SSI)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Goal of SSI: full serializability with small perf penalty compared to snapshot isolation.&lt;/li&gt;
&lt;li&gt;Used in single-node (PostgreSQL 9.1) and distributed, may become the new default.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pessimistic-versus-optimistic-concurrency-control&#34;&gt;Pessimistic versus optimistic concurrency control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;2PL is pessimistic&lt;/li&gt;
&lt;li&gt;SSI is optimistic: When a transaction wants to commit, the database checks isolation violations&lt;/li&gt;
&lt;li&gt;If there is enough spare capacity, and if contention between transactions is not too high, optimistic concurrency control techniques perform better&lt;/li&gt;
&lt;li&gt;On top of snapshot isolation, SSI adds an algorithm for detecting serialization conflicts among writes and determining which transactions to abort.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Decisions based on an outdated premise
A premise is a fact that was true at the beginning of the transaction. How does the database know if a query result might have changed?&lt;/p&gt;
&lt;h3 id=&#34;detecting-stale-mvcc-reads&#34;&gt;Detecting stale MVCC reads&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The database needs to track when a transaction ignores another transaction’s writes due to MVCC visibility rules.&lt;/li&gt;
&lt;li&gt;Check any of the ignored writes has been committed and abort if so.&lt;/li&gt;
&lt;li&gt;Wait until committing because read-only won&amp;rsquo;t write skew, and other write transactions might be aborted.&lt;/li&gt;
&lt;li&gt;Key is to avoid unnecessary aborts.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;detecting-writes-that-affect-prior-reads&#34;&gt;Detecting writes that affect prior reads&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DB track ephemeral information about transactions reading data on index, or at the table level.&lt;/li&gt;
&lt;li&gt;When a transaction writes, notify existing reader of that data&lt;/li&gt;
&lt;li&gt;Check other writes commit when commit reader.&lt;/li&gt;
&lt;li&gt;(Question: why not notify existing reader when committing the other writer transaction?)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;performance-of-serializable-snapshot-isolation&#34;&gt;Performance of serializable snapshot isolation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The rate of aborts significantly affects the overall performance of SSI. So SSI requires short read-write transactions, but it&amp;rsquo;s less sensitive to slow transactions than two-phase locking or serial execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;source:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://xgwang.me/posts/ddia-7-transactions/&#34;&gt;https://xgwang.me/posts/ddia-7-transactions/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ddia&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DDIA Chapter 6 - Partition</title>
      <link>http://localhost:1313/post/2024-10-06-ddia-chapter-6-partition/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-10-06-ddia-chapter-6-partition/</guid>
      <description>&lt;h2 id=&#34;two-types-of-partition-techniques&#34;&gt;Two types of partition techniques&lt;/h2&gt;
&lt;h3 id=&#34;key-range-partition&#34;&gt;Key Range Partition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;How: [a-c], [d-e], &amp;hellip;&lt;/li&gt;
&lt;li&gt;Pros: Efficient for range query.&lt;/li&gt;
&lt;li&gt;Cons: Hot spot.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hash-partition&#34;&gt;Hash Partition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;How: hash first, then use range.&lt;/li&gt;
&lt;li&gt;Pros: Distribute load evenly.&lt;/li&gt;
&lt;li&gt;Cons: Range query is inefficient.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hybrid&#34;&gt;Hybrid&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;How: one part -&amp;gt; partition, the other part -&amp;gt; sort order.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;partitioning-secondary-indexes&#34;&gt;Partitioning Secondary Indexes&lt;/h2&gt;
&lt;h3 id=&#34;partitioning-secondary-indexes-by-document&#34;&gt;Partitioning Secondary Indexes by Document&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Database can perform indexing automatically.&lt;/li&gt;
&lt;li&gt;Note: in KV-only DB, application level secondary indexing is prone to inconsistency.&lt;/li&gt;
&lt;li&gt;Each partition maintains its own secondary indexes.&lt;/li&gt;
&lt;li&gt;A.K.A. local index.&lt;/li&gt;
&lt;li&gt;Need to send the query to all partitions, and combine all the results you get back (scatter/gather).&lt;/li&gt;
&lt;li&gt;Read queries are expensive, and prone to latency amplification. But widely used.&lt;/li&gt;
&lt;li&gt;Recommend structure the partitioning scheme so that secondary index queries can be served from a single partition.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;partitioning-secondary-indexes-by-term&#34;&gt;Partitioning Secondary Indexes by Term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A global index must also be partitioned (term-partitioned).&lt;/li&gt;
&lt;li&gt;Partition the index by the term itself, or using a hash of the term.&lt;/li&gt;
&lt;li&gt;Pro: more efficient read (no scatter/gather).&lt;/li&gt;
&lt;li&gt;Con: write slower and more complicated, require distributed transaction.&lt;/li&gt;
&lt;li&gt;Updates to global secondary indexes are asynchronous, e.g., Amazon DynamoDB.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;strategies-for-rebalancing&#34;&gt;Strategies for Rebalancing&lt;/h2&gt;
&lt;h3 id=&#34;how-not-to-do-it-hash-mod-n&#34;&gt;How not to do it: hash mod N&lt;/h3&gt;
&lt;p&gt;Problem: move data more than necessary&lt;/p&gt;
&lt;h3 id=&#34;fixed-number-of-partitions&#34;&gt;Fixed number of partitions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create many more partitions than there are nodes, and assign several partitions to each node.&lt;/li&gt;
&lt;li&gt;The new node can steal a few partitions from every existing node.&lt;/li&gt;
&lt;li&gt;The number of partitions is usually fixed when the database is first set up and not changed afterward.&lt;/li&gt;
&lt;li&gt;If partitions are very large, rebalancing and recovery from node failures become expensive. But if partitions are too small, they incur too much overhead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;request-routing&#34;&gt;Request Routing&lt;/h2&gt;
&lt;h3 id=&#34;strategy-for-routing&#34;&gt;Strategy for routing&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Send requests to all nodes, and if we do not get result, reoute to next node.&lt;/li&gt;
&lt;li&gt;Implement a routing tier which knows which node has the specific partition.&lt;/li&gt;
&lt;li&gt;Client knows the partition.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;how-does-the-component-make-the-routing-decision&#34;&gt;How does the component make the routing decision&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Zookeeper which is a service that knows the partition.&lt;/li&gt;
&lt;li&gt;Gossip protocol.&lt;/li&gt;
&lt;li&gt;Mannual rebalance.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;source:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://xgwang.me/posts/ddia-6-partitioning/#intro&#34;&gt;https://xgwang.me/posts/ddia-6-partitioning/#intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ddia&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DDIA Chapter 5 - Repliation</title>
      <link>http://localhost:1313/post/2024-10-05-ddia-chapter-5-replication/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-10-05-ddia-chapter-5-replication/</guid>
      <description>&lt;h1 id=&#34;importance-of-replication&#34;&gt;Importance of Replication&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Fault Tolerance: keep the system running, even when one machine (or several machines) go down.&lt;/li&gt;
&lt;li&gt;Disconnected operation: Allow an application to continue to work when there is a network interruption.&lt;/li&gt;
&lt;li&gt;Latency: Placing data geographically close to users, so users can interact with it with a lower latency.&lt;/li&gt;
&lt;li&gt;Scalability: Being able to handle higher volume of reads than a single machine could handle.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;three-main-approaches-to-replication&#34;&gt;Three main approaches to replication&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Single-leader replication: Clients send write operation to a single node(leader), which sends a stream of data change to other replicas(followers). Reads can be performed on any replica, but reads from followers might be stale.&lt;/li&gt;
&lt;li&gt;Multi-leader replication: Clients send each write to onoe of several leader nodes, any of which can accept writes. The leaders send streams of data change events to each other and any follower nodes.&lt;/li&gt;
&lt;li&gt;Leaderless replication: Clients send each write to several nodes, and read from several nodes in parallel in order to detect and correct nodes with stale data. w + r &amp;gt; n.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;three-interesting-effects-can-be-caused-by-replication-lag&#34;&gt;Three interesting effects can be caused by replication lag&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Read-after-write consistency&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Users should always see data that they submit themselves.&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When read something that user can modify, read from leader.&lt;/li&gt;
&lt;li&gt;Track update time t, and from t to t + 1 minutes, read from leader(essentially wait for replica picking up the data from leader).&lt;/li&gt;
&lt;li&gt;Track the logical timestamp and compare it with follower node, if smaller, than find another node.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Monotonic reads&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After users have seen the data at one point in time, they shouldn&amp;rsquo;t later see the data from ealier point in time.&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always read from a single replica.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Consistent prefix reads&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Users should see data in a state that makes causal sense: for example, an answer should come after a question.&lt;/p&gt;
&lt;p&gt;Solution:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write to the same partition.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, we discussed the concurrency issues that are inherent in multi-leader and leaderless replication approaches: because such systems allow multiple writes to happen concurrently, conflicts may occur. We examined an algorithm that a database might use to determine whether one operation happened before another, or whether they happened concurrently. We also touched on methods for resolving conflicts by merging together concurrently written values.
In the next chapter we will continue looking at data that is distributed across multiple machines, through the counterpart of replication: splitting a large dataset into partitions.&lt;/p&gt;
&lt;p&gt;From DDIA chapter 5.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>谈谈户晨风</title>
      <link>http://localhost:1313/post/2024-09-29-%E6%88%B7%E6%99%A8%E9%A3%8E/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-29-%E6%88%B7%E6%99%A8%E9%A3%8E/</guid>
      <description>&lt;p&gt;大学申请的文书曾经有一题叫做 &lt;code&gt;What&#39;s unique about you?&lt;/code&gt;， 当时高中的我并没有感到自己的差异性，我只感到自己和有着同质化的教育背景的同学们一起愉快地学习，生活，成长。如果让现在的我挑一点自己的特殊性，我认为自己是一个兴趣爱好非常广泛的人。有一两个长期的兴趣爱好持续十几年，短期的兴趣爱好通常能维持 2-4 周，数据可能是 long-tail（长尾）分布的。简单列举一些我感兴趣过的话题包括但不限于：出老千，缅甸电信诈骗噶腰子，活佛，Splendor，Dominion，X 调查，X 博士播客，张雪峰谈升学&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;最近让我的大脑感到刺激的是一位名叫户晨风的短视频创作者。&lt;/code&gt;他在简中互联网独特的生态位，他犀利到有些偏激的观点，以及他相声般的直播，都让他收获了许多的订阅。我非常喜欢他产生的内容，但我对他有些过激的观点也有不同，综合来说自己并不完全算他的粉丝。&lt;/p&gt;
&lt;p&gt;他创作的内容以及直播效果有非常多独特的地方，我想从以下三个方面简单谈谈他的内容：1.购买力系列 + 送钱系列视频，2.直播的辩论套路，3.核心观点（中医无用，文言文无用，传统文化无用，苹果手机最优越，如何使用互联网+的思维赚钱）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;购买力系列与送钱系列视频：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;购买力系列视频：在国内/国外的拍摄中，户晨风会随机询问一个陌生人 ta 的一小时工资，然后在当地大型平价连锁超市进行消费，主要购买肉蛋奶，最终通过日用品的购买体现当地劳动收入的购买力。&lt;/li&gt;
&lt;li&gt;送钱视频：在国内的拍摄中，他在重庆，上海，成都等地区随机采访一个陌生人，随机问陌生人三个简单的问题，送给陌生人 500-2000 元不等，拍摄陌生人会怎么花这笔钱。但一般来说这些陌生人并不完全是随机的，很多情况下都是请的看似比较穷苦的人进行这个挑战，大致也是给穷苦人送钱。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直播流程与辩论套路&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直播流程：和游戏，才艺，户外直播不同，他的直播通常更像是一场辩论。他会让想上麦的 b 友打开直播，点击 pk，和他进行观点的碰撞。&lt;/li&gt;
&lt;li&gt;辩论套路：
&lt;ol&gt;
&lt;li&gt;在对方表达观点时打断别人说话，打乱别人节奏
&lt;ol&gt;
&lt;li&gt;读个 sc 啊，xxxxx。&lt;/li&gt;
&lt;li&gt;感谢 xxx 总。&lt;/li&gt;
&lt;li&gt;别说敏感的。&lt;/li&gt;
&lt;li&gt;你的麦有回音，是什么手机，安卓手机？这就对了，不是说安卓不好啊。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;查户口，夹在一些人生攻击
&lt;ol&gt;
&lt;li&gt;你是什么学历？&lt;/li&gt;
&lt;li&gt;你是哪里人？&lt;/li&gt;
&lt;li&gt;做什么工作？&lt;/li&gt;
&lt;li&gt;一年挣多少钱？&lt;/li&gt;
&lt;li&gt;你用什么手机？&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总之，他的直播效果通常来自于或是上麦 b 友的观点实在站不住脚，或是一种训诫别人的方式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;核心观点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;中医无用论：如果不借用西医的仪器，中医无法判断什么是肿瘤，什么是腰椎间盘突出。青蒿素来自于黄花蒿，和中医没关系。&lt;/li&gt;
&lt;li&gt;文言文无用论：文言文完全脱离生活，喜欢的可以学习研究，没必要放到学校课程中。&lt;/li&gt;
&lt;li&gt;传统文化无用 ：比如春节，中秋节，全都是糟粕，春节没必要贴春联，月饼全是糖和油，中秋节不要吃月饼。&lt;/li&gt;
&lt;li&gt;苹果手机最优越：苹果手机，designed by apple in California，吊打世界上所有手机，其他所有手机厂商都在亏钱，苹果大陆抽成 30%，别的安卓手机抽成也是 30%，甚至更多 50%。&lt;/li&gt;
&lt;li&gt;如何使用互联网+的思维赚钱：三件套：开卡车 （xxx 考研中） Vlog，收入公开，直播捞米。开油厂：收入公开，给大家做透明，拉近距离，提高信任，事实上他自己也这么做的。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总结一下观看他内容 2 周后的一些思考&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;虽然他是高中学历，但是他具有很多常识，查过很多中医方面的资料，学过很多历史方面的知识，他吃这碗饭是有那个金刚钻的。&lt;/li&gt;
&lt;li&gt;互联网+的思维：收入公开，获得信任，然后直播捞米&lt;/li&gt;
&lt;li&gt;有一次观看他直播，他在安慰一个女儿有先天性疾病的父亲：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有些时候人要接受事实，什么叫事实？有些病人类没有到那个程度，无法靠药物治好，只能期盼他自愈。人要接受这个现实，确实没办法，大家都经历过这种时刻，人类科技确实治不了，治不了怎么办，只能坦然接受，期盼他自愈。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Recommender System Study Notes - Nomination(6/6)</title>
      <link>http://localhost:1313/post/2024-09-06-rec-sys-nomination-6/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-06-rec-sys-nomination-6/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;GeoHash Nomination&lt;/li&gt;
&lt;li&gt;Author Nomination
&lt;ul&gt;
&lt;li&gt;Subscribed Author&lt;/li&gt;
&lt;li&gt;Interacted Author&lt;/li&gt;
&lt;li&gt;Similar Author&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cache Nomination&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;geohash-nomination&#34;&gt;GeoHash Nomination&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Indexing
&lt;ul&gt;
&lt;li&gt;GeoHash -&amp;gt; Item with good quality(reverse chronological order)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;No personalized&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;subscribed-author-nomination&#34;&gt;Subscribed Author Nomination&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Indexing:
&lt;ul&gt;
&lt;li&gt;User -&amp;gt; subscribed authors&lt;/li&gt;
&lt;li&gt;author -&amp;gt; uploaded items&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nomination:
&lt;ul&gt;
&lt;li&gt;User -&amp;gt; Subscribed Author -&amp;gt; New Item&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;interacted-author-nomination&#34;&gt;Interacted Author Nomination&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If someone likes/love/forward an item&lt;/li&gt;
&lt;li&gt;Indexing:
&lt;ul&gt;
&lt;li&gt;User -&amp;gt; Interacted Author (update it)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nomination:
&lt;ul&gt;
&lt;li&gt;User -&amp;gt; Interacted Author -&amp;gt; New Item&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;similar-author-nomination&#34;&gt;Similar Author Nomination&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Indexing:
&lt;ul&gt;
&lt;li&gt;Author -&amp;gt; Similar Author&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Nomination:
&lt;ul&gt;
&lt;li&gt;User ID -&amp;gt; Liked Author -&amp;gt; Similar Author -&amp;gt; New Item&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cache-nomination&#34;&gt;Cache Nomination&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Intuition: Use the previous ranking winning candidates discarded by re-ranking.&lt;/li&gt;
&lt;li&gt;Top 50 items, but get discarded by re-ranking, go to nomination.&lt;/li&gt;
&lt;li&gt;Cache is fixed. How to clear the cache
&lt;ul&gt;
&lt;li&gt;Got impressed&lt;/li&gt;
&lt;li&gt;At most 10 times&lt;/li&gt;
&lt;li&gt;At most 3 days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bloom-filter&#34;&gt;Bloom Filter&lt;/h3&gt;
&lt;h4 id=&#34;intuition&#34;&gt;Intuition&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If user has seen an item, then we do not recommend this item to user&lt;/li&gt;
&lt;li&gt;For each user, record item that has been recommended(maybe for a month)&lt;/li&gt;
&lt;li&gt;For each item, check if it&amp;rsquo;s been recommended before&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;basics&#34;&gt;Basics&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The Bloom filter determines whether an item ID is in the set of exposed items.&lt;/li&gt;
&lt;li&gt;If the judgment is &amp;ldquo;no&amp;rdquo;, then the item is definitely not in the set.&lt;/li&gt;
&lt;li&gt;If the judgment is &amp;ldquo;yes&amp;rdquo;, then the item is likely in the set. (There may be false positives, where an unexposed item is incorrectly judged as exposed and thus filtered out.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The size of the exposed item set is \( n \), the dimensionality of the binary vector is \( m \), and \( k \) hash functions are used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The false positive probability of the Bloom filter \( \delta \) is approximately:&lt;/p&gt;
\[
  \delta \approx \left( 1 - \exp\left( \frac{-kn}{m} \right) \right)^k
  \]
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As \( n \) increases, the more 1&amp;rsquo;s there are in the vector, and the higher the false positive probability. (The probability that all \( k \) positions corresponding to unexposed items are set to 1 increases.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As \( m \) increases, the vector becomes longer, making hash collisions less likely.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If \( k \) is too large or too small, it is not ideal; \( k \) has an optimal value.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Exposed Filtering Path:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               +-------------+              +---------+              +-------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               |   Recall 1  |------------&amp;gt; | Sorting |------------&amp;gt; |   Item 1    |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               +-------------+              +---------+              +-------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               |   Recall 2  |                                                   |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               +-------------+                                                   |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               |   Recall 3  |                                                   |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               +-------------+                                                   v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                           +-------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                           |   Item 2    |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                           +-------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                           |     ...     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                           +-------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                           |   Item q    |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                                           +-------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                      ^                                                        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                      |                                                        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+------------------+  |                                                        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;| Binary Vector    |&amp;lt;-+                                                        |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;+------------------+                                                           v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             +-------------------+     +-----------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             | Bloom Filter      |&amp;lt;----| Real-time Processing   |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             | (Exposure Filter) |     |  (Kafka + Flink)       |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             +-------------------+     +-----------------------+
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Recommender System Study Notes - Nomination(5/6)</title>
      <link>http://localhost:1313/post/2024-09-05-rec-sys-nomination-5/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-05-rec-sys-nomination-5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Recommender System Study Notes - Nomination(4/6)</title>
      <link>http://localhost:1313/post/2024-09-04-rec-sys-nomination-4/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-04-rec-sys-nomination-4/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Two tower model full update/incremental update.
&lt;ul&gt;
&lt;li&gt;Online Nomination: Online compute user ID, ANN in stored vector database with item.&lt;/li&gt;
&lt;li&gt;Full Update: 1 epoch, 1 day.&lt;/li&gt;
&lt;li&gt;Incremental Update: Only upadte ID embedding, frozen the fully connected layer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Two tower model Self-supervised learning
&lt;ul&gt;
&lt;li&gt;Problem: Two tower cannot learn item with limited amount of clicks (data biased).&lt;/li&gt;
&lt;li&gt;Self-supervised learning: random feature transformation&lt;/li&gt;
&lt;li&gt;bi&amp;rsquo;, bi&amp;rsquo;&amp;rsquo; high similarity&lt;/li&gt;
&lt;li&gt;bi&amp;rsquo;, bj&amp;rsquo;&amp;rsquo; low similarity&lt;/li&gt;
&lt;li&gt;Training:
&lt;ul&gt;
&lt;li&gt;pick n (user - item) as a batch for training.&lt;/li&gt;
&lt;li&gt;m items as a batch(uniform sampling) for self-supervised learning.&lt;/li&gt;
&lt;li&gt;$\frac{1}{n} \sum_{i=1}^{n} L_{\text{main}}[i] + \alpha \cdot \frac{1}{m} \sum_{j=1}^{m} L_{\text{self}}[j]$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;online-nomination&#34;&gt;Online Nomination&lt;/h3&gt;
&lt;h4 id=&#34;implementation&#34;&gt;Implementation&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Item
&lt;ul&gt;
&lt;li&gt;Use neural network to compute item b&amp;rsquo;s embedding.&lt;/li&gt;
&lt;li&gt;Store them in vectorized databse (Milvus, Faiss, HnswLib).&lt;/li&gt;
&lt;li&gt;Indexing, for ANN search.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;User
&lt;ul&gt;
&lt;li&gt;Use user ID, feature, etc to compute user a&amp;rsquo;s embedding.&lt;/li&gt;
&lt;li&gt;ANN search
&lt;ul&gt;
&lt;li&gt;Use a as query.&lt;/li&gt;
&lt;li&gt;Return the top k as return.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why store item but compute user online?
&lt;ul&gt;
&lt;li&gt;User is only 1, item is O(b).&lt;/li&gt;
&lt;li&gt;User often changes quickly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;model-update&#34;&gt;Model Update&lt;/h3&gt;
&lt;h4 id=&#34;full-update-vs-incremental-update&#34;&gt;Full Update VS Incremental Update&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Full Update
&lt;ul&gt;
&lt;li&gt;Use yesterday&amp;rsquo;s tfrecord, train 1 epoch.&lt;/li&gt;
&lt;li&gt;Update the new user neural network, store item data into database.&lt;/li&gt;
&lt;li&gt;Easy to implement, easy requirement for the system.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Incremental Update(online learning)
&lt;ul&gt;
&lt;li&gt;Why? User&amp;rsquo;s interest can change quickly.&lt;/li&gt;
&lt;li&gt;Data streaming, TFRecord.&lt;/li&gt;
&lt;li&gt;Online learning, gradient descent, only update ID Embedding, not other parameters in the neural network.&lt;/li&gt;
&lt;li&gt;Update the new ID embedding.&lt;/li&gt;
&lt;li&gt;To be discarded after full update.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Why only incremental update is not having the best result?
&lt;ul&gt;
&lt;li&gt;Hourly data is biased.&lt;/li&gt;
&lt;li&gt;Full update: random shuffle, 1 epoch.&lt;/li&gt;
&lt;li&gt;Incremental update: train from morning to night, this is not having the best result.&lt;/li&gt;
&lt;li&gt;random shuffle makes a positive impact on the learning.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;two-tower-model-self-supervised-learning&#34;&gt;Two tower model Self-supervised learning&lt;/h3&gt;
&lt;h4 id=&#34;problem&#34;&gt;Problem&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The head effect in the recommendation system is severe:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A small number of items account for most of the clicks.&lt;/li&gt;
&lt;li&gt;Most items have a low number of clicks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The features of high-click items are well-learned, but the features of long-tail items are not well-learned.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Self-supervised learning: data augumentation, to better learn long-tail items&amp;rsquo; embedding.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;intuition&#34;&gt;Intuition&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;A simple feature transformation will make minimal impact on their feature embeddings, and pairwise, the similarity still remains large.&lt;/li&gt;
&lt;li&gt;i -&amp;gt; i&amp;rsquo; -&amp;gt; bi&amp;rsquo;, i -&amp;gt; i&amp;rsquo;&amp;rsquo; -&amp;gt; bi&amp;rsquo;&amp;rsquo;, j -&amp;gt; j&amp;rsquo; -&amp;gt; bj&amp;rsquo;, j -&amp;gt; j&amp;rsquo;&amp;rsquo;-&amp;gt;bj&#39;&#39;&lt;/li&gt;
&lt;li&gt;i, bi&amp;rsquo; and bi&amp;rsquo;&amp;rsquo; has high similarity&lt;/li&gt;
&lt;li&gt;i, j, bi&amp;rsquo; and bj&amp;rsquo;&amp;rsquo; has low similarity&lt;/li&gt;
&lt;li&gt;cos(bi, bi&amp;rsquo;&amp;rsquo;) big, cos(bi&amp;rsquo;, bj&amp;rsquo;) small&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;methods&#34;&gt;Methods&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Random Mask&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Randomly pick labels, and set them to null.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Dropout&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Randomly dropout 50% label.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Complementary&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;ID, Label, Keywords, City.&lt;/li&gt;
&lt;li&gt;Randomly divide them into two {ID, keyword} and {Label, City}.&lt;/li&gt;
&lt;li&gt;{ID, default, Keyword, default} -&amp;gt; Item embedding.&lt;/li&gt;
&lt;li&gt;{default, Label, default, City} -&amp;gt; Item embedding.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Mask a set of correlated features&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;U = {Male, Female, Unisex}.&lt;/li&gt;
&lt;li&gt;V = {Photography, Football, IT, Makeup}.&lt;/li&gt;
&lt;li&gt;u = female, v = Makeup, p(u, v) is high.&lt;/li&gt;
&lt;li&gt;u = female, v = IT, p(u, v) is low.&lt;/li&gt;
&lt;li&gt;$MI(U, V) = \sum_{u \in U} \sum_{v \in V} p(u, v) \cdot \log \frac{p(u, v)}{p(u) \cdot p(v)}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assume there are a total of \( k \) features. Calculate the MI (Mutual Information) between any two features offline, resulting in a \( k \times k \) matrix.&lt;/li&gt;
&lt;li&gt;Randomly select one feature as a seed and find the \( k/2 \) features most related to the seed.&lt;/li&gt;
&lt;li&gt;Mask the seed and its related \( k/2 \) features, retaining the remaining \( k/2 \) features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Training:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sampling m items as a batch&lt;/li&gt;
&lt;li&gt;cos(bi&amp;rsquo;, bi&amp;rsquo;&amp;rsquo;) -&amp;gt; 1, other cos(bi&amp;rsquo;, bj&amp;rsquo;&amp;rsquo;) -&amp;gt; 0&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Recommender System Study Notes - Nomination(3/6)</title>
      <link>http://localhost:1313/post/2024-09-03-rec-sys-nomination-3/</link>
      <pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-03-rec-sys-nomination-3/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Two Tower Model - Architecture + Training&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pointwise Training
&lt;ul&gt;
&lt;li&gt;View nomination as binary classification&lt;/li&gt;
&lt;li&gt;Sample: cos(a,b) -&amp;gt; +1, negative sample: cos(a, b) -&amp;gt; -1&lt;/li&gt;
&lt;li&gt;Positive : negative = 1:2 / 1:3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pairwise Training
&lt;ul&gt;
&lt;li&gt;Intuntion: cos(a, b+) &amp;gt; cos(a, b-)&lt;/li&gt;
&lt;li&gt;Triplet hinge loss = max(0, cos(a, b-) + m - cos(a, b+))&lt;/li&gt;
&lt;li&gt;Triplet logistic loss = log(1 + exp(σ) * cos(a, b-) - cos(a, b+))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Listwise Training
&lt;ul&gt;
&lt;li&gt;CrossEntropyLoss&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Two Tower Model - Positive Samples + Negative Samples&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Positive Sample:
&lt;ul&gt;
&lt;li&gt;Impressed and clicked&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Negative Sample:&lt;/li&gt;
&lt;li&gt;Easy negative sample:
&lt;ul&gt;
&lt;li&gt;All items&lt;/li&gt;
&lt;li&gt;In-batch items&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Hard negative sample:
&lt;ul&gt;
&lt;li&gt;Nominated, but discarded by ranking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mix easy and hard for training dataset&lt;/li&gt;
&lt;li&gt;Wrong sampling:
&lt;ul&gt;
&lt;li&gt;Impressed, but not clicked (can be used for training ranking but not nomination)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;two-tower-modeldssm---architecture-and-training&#34;&gt;Two Tower Model(DSSM) - Architecture and Training&lt;/h3&gt;
&lt;h4 id=&#34;two-tower-model-architecture&#34;&gt;Two Tower Model Architecture&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Neural Network
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    └── Concatenate
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ├── Embedding Layer (User ID)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        │      └── Embedding (Vector Representation)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        ├── Embedding Layers (User Discrete Feature)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        │      └── Embedding (Vector Representation)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        └── Normalization, Binning, etc. (normalize to 1, put into buckets)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;               └── User Continuous Features (Vector Representation)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;$\cos(a, b) = \frac{a \cdot b}{\|a\|_2 \cdot \|b\|_2}$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            Cosine Similarity:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                  /    \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                /        \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                             a            b
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          /                 \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              Neural Network              Neural Network
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                /                                \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         Feature Transformation           Feature Transformation
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         /                                          \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;User ID, Discrete Features,                 Product ID, Discrete Features,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Continuous Features                         Continuous Features
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;two-tower-model-training&#34;&gt;Two Tower Model Training&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Pointwise (binary classification)&lt;/li&gt;
&lt;li&gt;Pairwise&lt;/li&gt;
&lt;li&gt;Listwise&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;pointwise-training&#34;&gt;Pointwise Training&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Intuition: View nomination as binary classification&lt;/li&gt;
&lt;li&gt;positive sample: cos(a,b) -&amp;gt; +1, negative sample: cos(a, b) -&amp;gt; -1&lt;/li&gt;
&lt;li&gt;positive : negative = 1:2 / 1:3&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;pairwise-training&#34;&gt;Pairwise Training&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    cos(a, b⁺)          cos(a, b⁻)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    /      \            /      \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   /        \          /        \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                b⁺               a                  b⁻
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        (Positive Sample)       (User)           (Negative Sample)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                |                  |                    |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        Neural Network      Neural Network     Neural Network
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                |                  |                    |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Feature Transformation   Feature Transformation Feature Transformation
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                |                  |                    |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    Positive Item Feature     User Features          Negative Item Feature
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Intuntion: cos(a, b+) &amp;gt; cos(a, b-)&lt;/li&gt;
&lt;li&gt;triplet hinge loss = max(0, cos(a, b-) + m - cos(a, b+))&lt;/li&gt;
&lt;li&gt;triplet logistic loss = log(1 + exp(σ) * cos(a, b-) - cos(a, b+))&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;listwise-training&#34;&gt;Listwise Training&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CrossEntropyLoss(y, s) = -log(s⁺)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       +-----------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       |    CrossEntropyLoss   |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                       +-----------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                 |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                 |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          +-------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          |  Softmax Activation Function  |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                          +-------------------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                 |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      +------------+------------+-------------+ ... +------------+
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      |            |            |             |     |            |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     s⁺         s⁻_1       s⁻_2         ...   s⁻_n
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; (Positive)    (Negative)  (Negative)        (Negative)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    |             |             |                     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    |             |             |                     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; cos(a, b⁺)   cos(a, b⁻_1)  cos(a, b⁻_2)   ...  cos(a, b⁻_n)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   |              |             |                     |
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;(Positive)    (Negative)   (Negative)         (Negative)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; Sample         Sample        Sample            Sample
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;two-tower-modeldssm---positive-samples--negative-samples&#34;&gt;Two Tower Model(DSSM) - Positive Samples + Negative Samples&lt;/h3&gt;
&lt;h4 id=&#34;positive-samples&#34;&gt;Positive Samples&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;impressed and clicked&lt;/li&gt;
&lt;li&gt;problem: 20% item takes 80% click&lt;/li&gt;
&lt;li&gt;solution:
&lt;ul&gt;
&lt;li&gt;up-sampling: one sample appear multiple times&lt;/li&gt;
&lt;li&gt;down-sampling: discard samples&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;negative-samples&#34;&gt;Negative Samples&lt;/h4&gt;
&lt;h5 id=&#34;simple-negative-sampling-all-items&#34;&gt;Simple Negative Sampling: All Items&lt;/h5&gt;
&lt;h6 id=&#34;uniform-sampling-unfair-to-unpopular-items&#34;&gt;Uniform Sampling: Unfair to unpopular items&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Most positive samples are popular items.&lt;/li&gt;
&lt;li&gt;If uniform sampling produces negative samples, most of the negative samples are unpopular items.&lt;/li&gt;
&lt;li&gt;positive sample: popular items, negative sample: unpopular items, this is unfair.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;non-uniform-sampling-the-goal-is-to-suppress-popular-items&#34;&gt;Non-uniform Sampling: The goal is to suppress popular items&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;The probability of negative sampling is positively correlated with popularity (clicks).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sampling probability ∝ (clicks) ^ 0.75&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;simple-negative-sampling-negative-sample-within-a-batch&#34;&gt;Simple Negative Sampling: Negative Sample within a batch&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user1 - item1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user2 - item2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user3 - item3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user_n - item_n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;one batch has n positive samples&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one batch has n(n - 1) negative samples&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The probablity that an item appear in a batch is propotional to the number of times it clicked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We aim to get it propotional to clicks^0.75.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;offline training cos(a, bi) - log(pi), pi ∝ clicks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;online inference cos(a, bi)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;hard-negative-sampling&#34;&gt;Hard Negative Sampling&lt;/h4&gt;
&lt;h5 id=&#34;hard-negative-samples&#34;&gt;Hard negative samples:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Items that are ranked and close to the target (relatively hard).&lt;/li&gt;
&lt;li&gt;Items that are ranked far behind the target (extremely hard).&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;binary-classification-for-positive-and-negative-samples&#34;&gt;Binary classification for positive and negative samples:&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;All items (simple): High classification accuracy.&lt;/li&gt;
&lt;li&gt;Items that are ranked and close to the target (relatively hard): Easy to misclassify.&lt;/li&gt;
&lt;li&gt;Items that are ranked far behind the target (extremely hard): Even easier to misclassify.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;datasets&#34;&gt;Datasets&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Mix negative samples&lt;/li&gt;
&lt;li&gt;50% easy negative sample&lt;/li&gt;
&lt;li&gt;50% hard negative sample&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Recommender System Study Notes - Nomination(2/6)</title>
      <link>http://localhost:1313/post/2024-09-03-rec-sys-nomination-2/</link>
      <pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-03-rec-sys-nomination-2/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Discrete Feature&lt;/li&gt;
&lt;li&gt;Matrix Completion&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;discrete-feature&#34;&gt;Discrete Feature&lt;/h3&gt;
&lt;h4 id=&#34;example&#34;&gt;Example&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;sex&lt;/li&gt;
&lt;li&gt;nationality&lt;/li&gt;
&lt;li&gt;english words&lt;/li&gt;
&lt;li&gt;item id&lt;/li&gt;
&lt;li&gt;user id&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;how-to-encode-discrete-feature---vectorization&#34;&gt;How to encode discrete feature -&amp;gt; vectorization&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;one-hot encoding&lt;/li&gt;
&lt;li&gt;embedding (*)
&lt;ul&gt;
&lt;li&gt;size: vector dimension * number of items&lt;/li&gt;
&lt;li&gt;How to implement: TensorFlow, PyTorch -&amp;gt; embedding&lt;/li&gt;
&lt;li&gt;embedding = Parameter matrix * one-hot encoding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;matrix-completion&#34;&gt;Matrix Completion&lt;/h3&gt;
&lt;h4 id=&#34;intuition&#34;&gt;Intuition&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;item id -&amp;gt; embedding
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    \
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                     - cos(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    /
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;item id -&amp;gt; embedding
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;formula&#34;&gt;Formula&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;dataset = {u, i, y}&lt;/li&gt;
&lt;li&gt;training, u -&amp;gt; au, i -&amp;gt; bi&lt;/li&gt;
&lt;li&gt;optimization: $\min_{A, B} \sum_{\substack{(u, i, y) \in \Omega}} \left( y - \langle a_u, b_i \rangle \right)^2$&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;proscons&#34;&gt;Pros/Cons&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Cons
&lt;ul&gt;
&lt;li&gt;It only uses ID embedding without item, user characteristics
&lt;ul&gt;
&lt;li&gt;item characteristics: label, key words&lt;/li&gt;
&lt;li&gt;user characteristics: gender, age, geo, liked label&lt;/li&gt;
&lt;li&gt;Two tower Model&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Negative sample is wrong
&lt;ul&gt;
&lt;li&gt;Positive: User interacted, which is good&lt;/li&gt;
&lt;li&gt;Negative: User did not interact, which is not correct&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Training
&lt;ul&gt;
&lt;li&gt;dot product is worse than cosine similarity&lt;/li&gt;
&lt;li&gt;Loss(regression) is worse than cross entropy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;implementation&#34;&gt;Implementation&lt;/h4&gt;
&lt;h5 id=&#34;offline&#34;&gt;Offline:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;Learning A: user&lt;/li&gt;
&lt;li&gt;Learning B: item&lt;/li&gt;
&lt;li&gt;storing A into {user id: embedding} key-value&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;online&#34;&gt;Online:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;user Id -&amp;gt; find a&amp;rsquo;s vector&lt;/li&gt;
&lt;li&gt;nearest neighbour search, return the top 100 b whose &amp;lt;a, b&amp;gt; is max&lt;/li&gt;
&lt;li&gt;Approximate Nearest Neighbor (ANN)
&lt;ul&gt;
&lt;li&gt;pre process the circile into sectors&lt;/li&gt;
&lt;li&gt;pick a representative vector(indexing) represents the sector&lt;/li&gt;
&lt;li&gt;find representative vector, then find vector in that sector instead of the whole circle&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Recommender System Study Notes - Nomination(1/6)</title>
      <link>http://localhost:1313/post/2024-09-02-rec-sys-nomination-1/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-02-rec-sys-nomination-1/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Item CF&lt;/li&gt;
&lt;li&gt;Swing&lt;/li&gt;
&lt;li&gt;User CF&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;item-cf&#34;&gt;Item CF&lt;/h3&gt;
&lt;h4 id=&#34;intuition&#34;&gt;Intuition&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If user likes i1 and i1 is similar with i2 -&amp;gt; Then user is likely to like i2&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;formula&#34;&gt;Formula&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;$score = \sum_j \text{like}(\text{user}, \text{item}\_j) \times \text{sim}(\text{item}\_j, \text{item})$, to compute Item CF score&lt;/li&gt;
&lt;li&gt;$\text{sim}(i_1, i_2) = \frac{|\mathbf{v}|}{\sqrt{|\mathbf{w}_1| \cdot |\mathbf{w}_2|}}$, to compute similarity, w1 as the user who likes i1, w2 as the set, v as the intersection between i1 and i2.&lt;/li&gt;
&lt;li&gt;$\text{sim}(i*1, i_2) = \frac{\sum*{v \in v} \text{like}(v, i*1) \cdot \text{like}(v, i_2)}{\sqrt{\sum*{u*1 \in w_1} \text{like}^2(u_1, i_1)} \cdot \sqrt{\sum*{u_2 \in w_2} \text{like}^2(u_2, i_2)}}$, to take like score into consideration).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;implementation&#34;&gt;Implementation&lt;/h4&gt;
&lt;h5 id=&#34;offline&#34;&gt;Offline:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;User -&amp;gt; Item Indexing
&lt;ul&gt;
&lt;li&gt;return the last-n items with interaction that this user interacts with.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Item -&amp;gt; Item Indexing
&lt;ul&gt;
&lt;li&gt;compute sim (i, j) maybe maintaining User-&amp;gt;Item&lt;/li&gt;
&lt;li&gt;for each item, find the cloest k items&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;online-inference-user-id---100-items&#34;&gt;Online Inference: (user id -&amp;gt; 100 items)&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;user id -&amp;gt; last-n items&lt;/li&gt;
&lt;li&gt;for each item in last-n, use item-item to find k items&lt;/li&gt;
&lt;li&gt;Use score formula to compute n * k items&amp;rsquo; score&lt;/li&gt;
&lt;li&gt;pick top 100, and output top 100 items as the nomination result in this Item CF Channel&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;swing&#34;&gt;Swing&lt;/h3&gt;
&lt;h4 id=&#34;intuition-1&#34;&gt;Intuition&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;If two items are not that relavant, but it got forwarded into a same small group, we want to lower the similarity score.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;formula-1&#34;&gt;Formula&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;u1 -&amp;gt; j1, u2 -&amp;gt; j2
&lt;ul&gt;
&lt;li&gt;$\text{overlap}(u_1, u_2) = |\mathcal{J}_1 \cap \mathcal{J}_2|$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;i1 -&amp;gt; w1, i2 -&amp;gt; w2, v = w1 ∩ w2
&lt;ul&gt;
&lt;li&gt;$\text{sim}(i_1, i_2) = \sum_{u_1 \in V} \sum_{u_2 \in V} \frac{1}{\alpha + \text{overlap}(u_1, u_2)}$, to compute similarity, a is a hyper-parameter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if overlap is big, then the contribution to similarity becomes low&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;user-cf&#34;&gt;User CF&lt;/h3&gt;
&lt;h4 id=&#34;intuition-2&#34;&gt;Intuition&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;I will like the notes which liked by someone who is similar to me.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;formula-2&#34;&gt;Formula&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Method1: like, collect, click notes are similar&lt;/li&gt;
&lt;li&gt;Method2: Subscribed authors are similar&lt;/li&gt;
&lt;li&gt;u1 -&amp;gt; j1, u2 -&amp;gt; j2, I = j1 ∩ j2, nl: the number of users who likes l
&lt;ul&gt;
&lt;li&gt;$sim = \text{sim}(u_1, u_2) = \frac{|I|}{\sqrt{|\mathcal{J}_1| \cdot |\mathcal{J}_2|}}$&lt;/li&gt;
&lt;li&gt;$sim = \text{sim}(u_1, u_2) = \frac{\sum_{I \in I} \frac{1}{\log(1 + n_I)}}{\sqrt{|\mathcal{J}_1| \cdot |\mathcal{J}_2|}}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;$score = \sum_j \text{sim(user, user}_j\text{)} \times \text{like(user}_j, \text{item)}$&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;implementation-1&#34;&gt;Implementation&lt;/h4&gt;
&lt;h5 id=&#34;offline-1&#34;&gt;Offline:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;User -&amp;gt; Item Indexing
&lt;ul&gt;
&lt;li&gt;return the last-n items with interaction that this user interacts with.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;User -&amp;gt; User Indexing
&lt;ul&gt;
&lt;li&gt;compute sim (i, j)&lt;/li&gt;
&lt;li&gt;for each user, find the cloest k users&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;online&#34;&gt;Online:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;user-user indexing: id -&amp;gt; k cloest users&lt;/li&gt;
&lt;li&gt;user-item indexing: for each user, find his/her last-n, use user-item to find n items&lt;/li&gt;
&lt;li&gt;compute score: Use the formula to compute n * k items&amp;rsquo; score&lt;/li&gt;
&lt;li&gt;rank: pick top 100, and output top 100 items as the nomination result in this User CF Channel&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Recommender System Study Notes Basics (1/1)</title>
      <link>http://localhost:1313/post/2024-09-01-rec-sys-basics-1/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-09-01-rec-sys-basics-1/</guid>
      <description>&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;
&lt;div class=&#34;markmap&#34; style=&#34;height: 200px;&#34;&gt;

&lt;pre&gt;- Impression
  - Click
    - ScrollToEnd
      - Comment
    - Like
    - Collect
    - Share&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&#34;基础指标&#34;&gt;基础指标&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Click-through rate = Number of clicks / Number of impressions&lt;/li&gt;
&lt;li&gt;Like rate = Number of likes / Number of impressions&lt;/li&gt;
&lt;li&gt;Collection rate = Number of collections / Number of clicks&lt;/li&gt;
&lt;li&gt;Forwarding rate = Number of forwards / Number of clicks&lt;/li&gt;
&lt;li&gt;Completion rate = Number of times scrolled to the end / Number of clicks * f(Note length)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;北极星指标&#34;&gt;北极星指标&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;用户规模
DAU daily active user
MAU monthly active user&lt;/li&gt;
&lt;li&gt;消费
人均使用时长，人均阅读笔记数量&lt;/li&gt;
&lt;li&gt;发布
发布渗透率，人均发布量&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;实验流程&#34;&gt;实验流程&lt;/h4&gt;
&lt;div class=&#34;markmap&#34; style=&#34;height: 200px;&#34;&gt;

&lt;pre&gt;- Offline Test
  - A/B Test
    - experiment rollout&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&#34;chain-of-recommender-system&#34;&gt;Chain of Recommender System&lt;/h4&gt;
&lt;div class=&#34;markmap&#34; style=&#34;height: 200px;&#34;&gt;

&lt;pre&gt;- Nomination
  - Pre-Ranking
    - Ranking
      - Re-Ranking&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nomination O(billion) -&amp;gt; O(k)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CF&lt;/li&gt;
&lt;li&gt;Two Tower&lt;/li&gt;
&lt;li&gt;Subscribed Content Creator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pre-Ranking + Ranking O(k) -&amp;gt; O(100)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use a neural network as follow:&lt;/li&gt;
&lt;li&gt;Input:
&lt;ul&gt;
&lt;li&gt;User Feature Embedding&lt;/li&gt;
&lt;li&gt;Item Feature Embedding&lt;/li&gt;
&lt;li&gt;Stats Embedding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Output:
&lt;ul&gt;
&lt;li&gt;Click-through rate&lt;/li&gt;
&lt;li&gt;Like Rate&lt;/li&gt;
&lt;li&gt;Collection Rate&lt;/li&gt;
&lt;li&gt;Forwarding Rate&lt;/li&gt;
&lt;li&gt;Completion Rate&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Combine them and output a score&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Re-Ranking O(100) -&amp;gt; O(80?) | for diversity&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Common methods:&lt;/li&gt;
&lt;li&gt;MMR&lt;/li&gt;
&lt;li&gt;DPP&lt;/li&gt;
&lt;li&gt;use pre-set rules to diversify notes&lt;/li&gt;
&lt;li&gt;insert ads, change sequence based on rules&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ab-test&#34;&gt;A/B Test&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Basic flow:
&lt;ul&gt;
&lt;li&gt;new GNN, Offline testing gives promising results&lt;/li&gt;
&lt;li&gt;online A/B test, vaildate&lt;/li&gt;
&lt;li&gt;tune hyper parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;how to put user into buckets randomly
&lt;ul&gt;
&lt;li&gt;hash user id&lt;/li&gt;
&lt;li&gt;compute metrics for each bucket, DAU, etc&lt;/li&gt;
&lt;li&gt;experiment rollout&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Overlapping experiment
&lt;ul&gt;
&lt;li&gt;overlapping: nomination, pre-ranking, ranking, re-ranking, user interface, ads&lt;/li&gt;
&lt;li&gt;each layer: mutually exclusive&lt;/li&gt;
&lt;li&gt;between layers: orthogonality&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Holdout mechanism
&lt;ul&gt;
&lt;li&gt;10% as holdout bucket + 90% as overlapping experiment&lt;/li&gt;
&lt;li&gt;clean holdout and rollout experiment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Experiment Rollout&lt;/li&gt;
&lt;li&gt;Experiment Reverse&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pre-ranking-rankingscoring&#34;&gt;Pre-Ranking, Ranking(scoring)&lt;/h3&gt;
&lt;h3 id=&#34;re-ranking&#34;&gt;Re-Ranking&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Areas of Exploration and Growth</title>
      <link>http://localhost:1313/post/2024-08-27-area-of-growth/</link>
      <pubDate>Tue, 27 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-08-27-area-of-growth/</guid>
      <description>&lt;h4 id=&#34;health-and-fitness&#34;&gt;Health and Fitness&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Gym&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;machine-learning&#34;&gt;Machine Learning&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Recommender System&lt;/li&gt;
&lt;li&gt;CS224N: Natural Language Processing with Deep Learning&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;city-planning&#34;&gt;City Planning&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Get an idea of city planning.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mindset-through-reading-and-writing&#34;&gt;Mindset (through reading and writing)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Thinking in system.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Leetcode Contest 410 Solutions</title>
      <link>http://localhost:1313/post/2024-08-14-init/</link>
      <pubDate>Wed, 14 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/2024-08-14-init/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;finalPositionOfSnake&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;cm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;commands&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;UP&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;RIGHT&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;DOWN&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;countGoodNodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;graph&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;nonlocal&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;cnts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;valids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nxt&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;graph&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nxt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nxt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;valids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;valid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;cnts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dfs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;countOfPairs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;MOD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1e9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MOD&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MOD&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;countOfPairs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;MOD&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1e9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nums&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                            &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                        &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MOD&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MOD&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;p1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;p2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MOD&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
